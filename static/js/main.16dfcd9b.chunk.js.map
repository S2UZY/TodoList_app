{"version":3,"sources":["atoms.tsx","components/CreateCategory.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","persistAtom","recoilPersist","categoryState","atom","key","default","TO_DO","toDoState","effects_UNSTABLE","toDoSelector","selector","get","toDos","category","filter","toDo","CreateCategory","setData","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","setValue","onSubmit","prev","required","placeholder","CreateToDo","setToDos","oldToDos","text","id","Date","now","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","DOING","DONE","ToDoList","useRecoilState","setCategory","console","log","value","onInput","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.16dfcd9b.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\nimport { recoilPersist } from 'recoil-persist'\r\n\r\nconst {persistAtom} = recoilPersist();\r\n\r\nexport enum Categories {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n}\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: Categories;\r\n}\r\n\r\nexport const categoryState = atom<Categories>({\r\n  key: \"category\",\r\n  default: Categories.TO_DO,\r\n});\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDo\",\r\n  default: [],\r\n  effects_UNSTABLE:[persistAtom]\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const category = get(categoryState);\r\n    return toDos.filter((toDo) => toDo.category === category);\r\n  },\r\n});\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { categoryState, toDoState } from \"../atoms\";\r\n\r\ninterface IForm {\r\n  category: string;\r\n}\r\n\r\nfunction CreateCategory() {\r\n  const setData = useSetRecoilState(toDoState);\r\n  const category = useRecoilValue(categoryState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleValid = ({ category }: IForm) => {\r\n    setData((prev) => \r\n      prev\r\n    );\r\n    setValue(\"category\", \"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleValid)}>\r\n      <input\r\n        {...register(\"category\", {\r\n          required: \"Please write Category name\",\r\n        })}\r\n        placeholder=\"Add Category\"\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateCategory;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { categoryState, toDoState } from \"../atoms\";\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nfunction CreateToDo() {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const category = useRecoilValue(categoryState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleValid = ({ toDo }: IForm) => {\r\n    setToDos((oldToDos) => [\r\n      { text: toDo, id: Date.now(), category },\r\n      ...oldToDos,\r\n    ]);\r\n    setValue(\"toDo\", \"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleValid)}>\r\n      <input\r\n        {...register(\"toDo\", {\r\n          required: \"Please write a To Do\",\r\n        })}\r\n        placeholder=\"Write a to do\"\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateToDo;\r\n","import React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { Categories, IToDo, toDoState } from \"../atoms\";\r\n\r\nfunction ToDo({ text, category, id }: IToDo) {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const {\r\n      currentTarget: { name },\r\n    } = event;\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\r\n      const newToDo = { text, id, category: name as any };\r\n      return [\r\n        ...oldToDos.slice(0, targetIndex),\r\n        newToDo,\r\n        ...oldToDos.slice(targetIndex + 1),\r\n      ];\r\n    });\r\n  };\r\n  return (\r\n    <li>\r\n      <span>{text}</span>\r\n      {category !== Categories.DOING && (\r\n        <button name={Categories.DOING} onClick={onClick}>\r\n          Doing\r\n        </button>\r\n      )}\r\n      {category !== Categories.TO_DO && (\r\n        <button name={Categories.TO_DO} onClick={onClick}>\r\n          To Do\r\n        </button>\r\n      )}\r\n      {category !== Categories.DONE && (\r\n        <button name={Categories.DONE} onClick={onClick}>\r\n          Done\r\n        </button>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Categories, categoryState, toDoSelector } from \"../atoms\";\r\nimport CreateCategory from \"./CreateCategory\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nfunction ToDoList() {\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  const [category, setCategory] = useRecoilState(categoryState);\r\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    setCategory(event.currentTarget.value as any);\r\n  };\r\n  console.log(toDos);\r\n  return (\r\n    <div>\r\n      <h1>To Dos</h1>\r\n      <hr />\r\n      <select value={category} onInput={onInput}>\r\n        <option value={Categories.TO_DO}>To Do</option>\r\n        <option value={Categories.DOING}>Doing</option>\r\n        <option value={Categories.DONE}>Done</option>\r\n      </select>\r\n      <CreateCategory />\r\n      <CreateToDo />\r\n      {toDos?.map((toDo) => (\r\n        <ToDo key={toDo.id} {...toDo} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport ToDoList from \"./components/ToDoList\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color:${(props) => props.theme.bgColor};\r\n  color:${(props) => props.theme.textColor};\r\n  line-height: 1.2;\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ToDoList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n"],"sourceRoot":""}